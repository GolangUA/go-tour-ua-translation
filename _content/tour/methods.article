Методи та інтерфейси
Цей урок охоплює такі поняття як методи та інтерфейси - конструкції, які визначають об'єкти та їх поведінку.

Автори Go
https://golang.org

* Методи

Go не має класів.
Але це не означає, що ви не можете визначати методи для типів.

Метод - це функція, в сігнатурі якої є аргумент-отримувач.

Отримувач знаходиться в окремому списку аргументів, між ключовим словом `func` і ім'ям метода.

У цьому пракладі метод `Abs` має аргумент-отримувач `v` типу `Vertex`.

.play methods/methods.go

* Методи - це функції

Пам'ятайте, що метод - це є функція з аргументом-отримувачем.

У прикладі, який ви зараз бачите, `Abs` написана як звичайна функція без будь-якої зміни її функціиональної поведінки.

* Методи, продовження

Ви також маєте змогу визначати методи для неструктурних типів.

У цьому прикладі ми бачимо числовий тип `MyFloat` для якого визначений метод `Abs`.

Тип аргумена-отримувача і метод, який ви визначаєте, повинні належити одному пакету.

Інакше кажучи, ви не можете визначити метод, тип аргумента-отримувача якого належить іньшому пакету, ніж пакет, до якого належить метод (це справедливо і для вбудованих типів даних, на кшталт `int`).

.play methods/methods-continued.go

* Вказівники у якості аргументів-отримувачів

Ви маєте змогу визначати методи, у яких аргументами-отримувачами виступють вказівники.

Це означає, що аргумент-отримувач має тип `*T` для деякого типу `T`. (Зауважте, що тип `T` не може бути вказівником сам по собі, наприклад `*int; інакше кажучи - вказівник на вказівник).

У прикладі ми бачимо, що у метода `Scale` аргумент-отримувач - це вказівник`*Vertex`.

Методи, з вказівниками у якості аргументів-отримувачів мають змогу модифікувати значення на які вказує вказівник (що і робить `Scale`).
Оскільки у функції методів часто закладають можливості модифікуції своїх аргументів-отримувачів, вказівники в якості аргументів-отримувачів дають більші можливостей, чим аргумент-отримувач в якості значення.

Спробуйте прибрати `*` з оголошення метода в рядку 18 і поспостерігайте, як зміниться поведінка програми.

Якщо аргумент-вказівник передається як значення, метод `Scale` оперує копією оригінального значення `Vertex` (тобто так само, як зі звичайним аргументом функції).
Метод `Scale` повинен мати вказівник у якості аргумента-отримувача, щоб мати змогу модифікувати значення `Vertex`, яке оголошене в функції `main`.

.play methods/methods-pointers.go

* Вказівники і функції

У прикладі, який ві бачите, методи `Abs` `Scale` переписані як функції.

А тепер ще раз, спробуйте прибрати `*` з рядка 18 (функція `Scale`).
Бачите, чому поведінка програми змінилась?
Які зміни необхідно внести в програму для її успішної компіляції? 
Якщо не впевнені, гортайте на наступну сторінку.

.play methods/methods-pointers-explained.go








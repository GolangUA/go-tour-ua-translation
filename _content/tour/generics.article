Generics (Узагальнення)
Go підтримує узагальнене програмування з використанням параметризованих типів. У цьому уроці наведено кілька прикладів використання узагальнень у вашому коді.

Автори Go
https://golang.org

* Type parameters

Функції у Go можуть бути написані для роботи з декількома типами з використанням параметризованих типів. 
Параметризовані типи у функції задаються у квадратних дужках, перед аргументами функції.

  func Index[T comparable](s []T, x T) int

Дане оголошення функції означає, що `s` - це слайс будь-якого типу `T`, який задовольняє
вбудованому обмеженню `comparable`. Також `x` є значенням того ж типу.

`comparable` - корисне обмеження, яке дає можливість використовувати оператори `==` та
`!=` над значеннями типу. У даному прикладі ми використовуємо його для порівняння значення
з усіма елементами слайсу до тих пір, поки не буде знайдено співпадіння. Ця функція `Index` працює
для будь-якого типу, що підтримує порівняння.

.play generics/index.go

* Узальненні типи

На додаток до узагальненних функцій, Go також підтримує загальні типи. Тип може бути параметризований type параметром, 
який може бути корисним для реалізації узагальнених структур даних.

У даному прикладі демонструється просте оголошення типу для однозв'язного списку,
що містить значення будь-якого типу.

В якості вправи, довершіть реалізацію цього списку.

.play generics/list.go

* Вітаємо!

Ви закінчили цей урок!

Ви можете повернутися до списку [[/tour/list][modules]], щоб знайти, що вивчати далі, або продовжити з [[javascript:click('.next-page')][next lesson]].